!function(t){var n={};function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=1)}([,function(t,n,e){"use strict";function r(){return atomic_blocks_pro_globals.blockSettingsPermissions}function o(){var t=[];return wp.blocks.getBlockTypes().map(function(n){n.name.startsWith("atomic-blocks")&&t.push(n)}),t=t.filter(function(t){return t.hasOwnProperty("ab_settings_data")})}function u(){return atomic_blocks_pro_globals.allRoles}e.r(n),e.d(n,"getBlockSettingsPermissions",function(){return r}),e.d(n,"get_registered_ab_blocks",function(){return o}),e.d(n,"getAllRoles",function(){return u}),wp.hooks.addFilter("ab_should_render_block_setting","ab_pro",function(t,n,e,o){var u=r();return void 0===u[n]||void 0===u[n][e]?t:o.roles.some(function(t){return!0===u[n][e][t]})})}]);